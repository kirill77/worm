Microtubule nucleation and polarization – implementation steps (based on mtLiterature.txt analysis)

Purpose
- Record literature-informed, biologically faithful steps to implement centrosome-driven MT nucleation and cortex-coupled polarization in the C. elegans zygote.

Context and current status
- Nucleation site class exists: Y_TuRC (γ-tubulin ring complex), owned by `Centrosome`.
- Y_TuRC target currently tied to γ-tubulin count (~ γ-tubulin / 50). With γ-tubulin ~ 0 at t=0, target Y_TuRC = 0.
- DataCollector logs: Time(s), NucleationSites(Y_TuRC), selected molecules per point, StepTime(ms).
- Added pathway molecules (StringDict): GTP, GDP, RHO_1, RHO_1_GTP, RHO_1_GDP, ECT_2, CHIN_1, CDC_42, CDC_42_GTP, CDC_42_GDP, NMY_2, AIR_1, MT_PLUS_END_CONTACT; maternal pools provisioned uniformly in cytosol.
- Uniform cytosolic pools alone do not produce asymmetry; we will add cortex-bound pools and AstralMTs.

Literature highlights (from mtLiterature.txt)
- No fixed numeric threshold for duplication; duplication is gated by S phase and CYE-1/CDK-2 activity → SPD-2 → ZYG-1 → SAS-6/5/4 (dosage sensitive).
- MTs per centrosome: ~10^3 early; ~1×10^4 at metaphase. Active nucleators (γ-TuRC-like) inferred to be ~3×10^3–1.2×10^4 at metaphase.
- PCM scaffold (SPD-2, SPD-5, PCMD-1) controls γ-tubulin recruitment; local soluble tubulin is ~10× enriched near PCM at metaphase.

Immediate next steps (code changes)
1) Add PCM/duplication pathway molecules
- Add IDs and strings: ZYG_1, SPD_2, SPD_5, PCMD_1, SAS_6, SAS_5, SAS_4.
- Provision maternal pools at t=0 (center/posterior centrosome). Treat them as a limiting maternal budget.

2) Replace hard-coded duplication thresholds with cell-cycle gating
- In Centrosome::update:
  - Gate duplication by: (S phase) AND (active CYE-1/CDK-2) AND (SPD-2 present) AND (ZYG-1 activity over minimal setpoint).
  - Model ZYG-1 dosage sensitivity (smooth dependence; no fixed numeric cutoffs).

3) Model PCM maturation and γ-tubulin recruitment
- Add a PCM size/state variable per centrosome depending on SPD-2, SPD-5, PLK-1/AIR-1.
- Recruit γ-tubulin to PCM as a function of PCM size × cytosolic γ-tubulin availability.
- Drive Y_TuRC target from PCM size × γ-tubulin recruitment, not a fixed /50 rule; tune to stage plateaus:
  - Early prophase: target nucleators ~1–3×10^3.
  - Metaphase: target ~6–8×10^3 (allow 3–12×10^3).

4) Seed biologically faithful initial conditions
- Provide maternal γ-tubulin (GAMMA_TUBULIN) and PCM scaffolds (SPD-2/5, PCMD-1) so early PCM growth and nucleation can occur before duplication ramps it further.
- Keep amounts tunable to reach stage plateaus.

5) Implement AstralMTs and cortex contact mapping (required for posterior cue)
- Dynamic instability (growth/shrink, catastrophe/rescue), 3D plus-end tracking.
- Cortex contact via cortex BVH; derive M_contact(x) as per-site contact density.
- Couple M_contact(x) to local molecule kinetics: reduce ECT-2 effectiveness / increase CHIN-1; modestly boost PAR-2 on-rate; enrich AIR-1 near centrosome/MTs.

6) Cortex-bound pools and surface mechanics
- Add cortex-bound complexes for: RHO-1-GTP:CORTEX, RHO-1-GDP:CORTEX, ECT-2:CORTEX, CHIN-1:CORTEX, NMY-2:CORTEX (alongside existing PAR_X:CORTEX).
- Binding/unbinding rules between cytosol and cortex; add to Cortex::m_bindableMolecules.
- CortexSurfaceGrid: per-site fields from cortex-bound densities:
  - R(x) = [RHO-1-GTP:CORTEX] / ([RHO-1-GTP:CORTEX] + [RHO-1-GDP:CORTEX])
  - E(x) ∝ [ECT-2:CORTEX], G(x) ∝ [CHIN-1:CORTEX]
  - C(x) ∝ [NMY-2:CORTEX] (or ∝ R initially), v(x) = −k_flow · ∇C(x)
- Add 2D advection of bound species by v(x) and lateral surface diffusion; CFL checks.

7) Data & validation
- DataCollector: keep NucleationSites(Y_TuRC); add per-centrosome γ-tubulin near PCM and (optional) PCM size proxy; later add M_contact(x) coverage.
- Validate stage plateaus: nucleators/MTs ~10^3 early → ~10^4 at metaphase; maintain non-saturation capacity.

Notes
- This plan avoids seed proxies; posterior asymmetry arises from AstralMT contacts and cortex-bound molecule kinetics.
- Parameter sources and stage targets are taken from mtLiterature.txt; we will refine constants as we wire the modules.
